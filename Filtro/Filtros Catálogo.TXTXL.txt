Representación Textual del archivo de Excel: "Filtros Catálogo.xlsm"
Fecha y hora de generación: 30/07/2016 04:30:04 p.m.

Resumen
=======
 * Hojas: 4
 * Nombres Definidos: 29
 * Módulos de Visual Basic: 8
 * Líneas de código VB: 146

Detalle
=======

Hojas:
 [Captura]
 [N]
 [S]
 [FILTRO2N]

Contenido:
[Captura]
[A1] \Captura\
[A3] \TIPO\
[A5] \MARCA\
[A7] \AUTO\
[B3] (SELECCION_TIPO) \Niu\
 DataValidation: Lista. [Fuente:"=$D$3:$D$4" ListaEnCelda:True ]
 Mensaje=[Mostrar:True Titulo:"" Mensaje:"" ] 
 Advertencia=[Mostrar:True Titulo:"" Mensaje:"" Estilo:Grave ] 
 OmitirBlancos:False DatoActualEsVálido:True 

[B5] (SELECCION_MARCA) \Honda\
 DataValidation: Lista. [Fuente:"=FUENTE_MARCAS" ListaEnCelda:True ]
 Mensaje=[Mostrar:True Titulo:"" Mensaje:"" ] 
 Advertencia=[Mostrar:True Titulo:"" Mensaje:"" Estilo:Grave ] 
 OmitirBlancos:False DatoActualEsVálido:True 

[B7] (SELECCION_AUTO) \CRV\
 DataValidation: Lista. [Fuente:"=FUENTE_AUTOS" ListaEnCelda:True ]
 Mensaje=[Mostrar:True Titulo:"" Mensaje:"" ] 
 Advertencia=[Mostrar:True Titulo:"" Mensaje:"" Estilo:Grave ] 
 OmitirBlancos:False DatoActualEsVálido:True 

[D1] (Captura!Listado.Catálogo) \=SELECCION_TIPO\
[D2] \Catálogo\
[D3] \Niu\
[D4] \Siu\
[E1] (Listado.Ubicación) \=VLOOKUP(Listado.Catálogo,Listado,COLUMN()-COLUMN(Listado.Catálogo)+1,0)\
[E2] \Ubicación\
[E3] \N!A3:C13\
[E4] \CATALOGO_S\
[F1] (Listado.Campo_Marca) \=VLOOKUP(Listado.Catálogo,Listado,COLUMN()-COLUMN(Listado.Catálogo)+1,0)\
[F2] \Campo Marca\
[F3] \MARCA\
[F4] \Brand\
[G1] (Listado.Campo_Auto) \=VLOOKUP(Listado.Catálogo,Listado,COLUMN()-COLUMN(Listado.Catálogo)+1,0)\
[G2] \Campo Auto\
[G3] \AUTO\
[G4] \Carro\

[N]
[A1] \Catálogo N\
[A3] \MARCA\
[A4] \Honda\
[A5] \Honda\
[A6] \Nissan\
[A7] \Nissan\
[A8] \Honda\
[A9] \Toyota\
[A10] \Baic\
[A11] \Honda\
[A12] \Honda\
[A13] \Baic\
[B3] \AUTO\
[B4] \Fit\
[B5] \Civic\
[B6] \Sentra\
[B7] \Ventra\
[B8] \CRV\
[B9] \TuHoyota\
[B10] \Zameid\
[B11] \Accord\
[B12] \Civic\
[B13] \No sabe fallar\
[C3] \DATO\
[C4] \a\
[N]
[C5] \b\
[C6] \c\
[C7] \d\
[C8] \e\
[C9] \g\
[C10] \--\
[C11] \x\
[C12] \b\
[C13] \?\

[S]
[A1] \Catálogo S\
[A3] \Brand\
[A4] \Hummer\
[A5] \Hummer\
[A6] \Ford\
[A7] \Ford\
[A8] \Chevrolet\
[A9] \Chevrolet\
[B3] \Carro\
[B4] \H3\
[B5] \H2\
[B6] \Ka\
[B7] \Exploter\
[B8] \Spank\
[B9] \Chevy\
[C3] \Campo\
[C4] \8.81063830658396\
[C5] \7.26757075058705\
[C6] \1.17157911971267\
[C7] \4.03875095145369\
[C8] \6.13038631666927\
[C9] \6.21706932805607\
[D3] \Traviesa\
[D4] \6.30113621112\
[D5] \4.33891429727652\
[S]
[D6] \4.98945367454637\
[D7] \3.33697476316045\
[D8] \6.10761154948007\
[D9] \7.30097305044152\

[FILTRO2N]
[A1] \Filtro de Catálogos a 2 Niveles\
[A2] \v1.0-SNAPSHOT\
[A4] \Parámetros\
[A5] \i.Ubicación\
[A6] \i.Campo Nivel 1\
[A7] \i.Campo Nivel 2\
[A8] \i.Nivel 1\
[A12] \ \
[B5] (FILTRO2N!i.Ubicación) \=Listado.Ubicación\
[B6] (FILTRO2N!i.Campo_Nivel_1) \=Listado.Campo_Marca\
[B7] (FILTRO2N!i.Campo_Nivel_2) \=Listado.Campo_Auto\
[B8] (FILTRO2N!i.Nivel_1) \=SELECCION_MARCA\
[D4] \Métodos\
[D6] \Actualizar Nivel 1\
[D8] \Actualizar Nivel 2\
[D10] \Cálculos\
[D12] \Nivel 1\
[D16] \Conteo\
[D17] (FILTRO2N!o.Conteo_Nivel_1) \=COUNTA(D20:D23)\
[D19] (FILTRO2N!_DESTINO_NIVEL_1_VBA) \MARCA\
[D20] (FILTRO2N!o.Elementos_Nivel_1) \Baic\
[D21] \Honda\
[D22] \Nissan\
[D23] \Toyota\
[F12] \Nivel 2\
[FILTRO2N]
[F14] \Parte 2\
[F16] \Conteo\
[F17] (FILTRO2N!o.Conteo_Nivel_2) \=COUNTA(F20:F23)\
[F19] (FILTRO2N!Extract) \AUTO\
[F20] (FILTRO2N!o.Elementos_Nivel_2) \Accord\
[F21] \Civic\
[F22] \CRV\
[F23] \Fit\
[H14] \Parte 1\
[H16] \=i.Campo_Nivel_1\
[H17] \=SELECCION_MARCA\
[H19] (FILTRO2N!_DESTINO_NIVEL_2_VBA) \MARCA\
[H20] \Honda\
[H21] \Honda\
[H22] \Honda\
[H23] \Honda\
[I19] \AUTO\
[I20] \Fit\
[I21] \Civic\
[I22] \CRV\
[I23] \Accord\
[J4] \Resultados (descripción)\
[J5] \o.Elementos_Nivel_1\
[J6] \o.Conteo_Nivel_1\
[J7] \o.Elementos_Nivel_2\
[FILTRO2N]
[J8] \o.Conteo_Nivel_2\
[J10] \Fórmulas para DV\
[J11] \=OFFSET( FILTRO2N!o.Elementos_Nivel_1 ,0,0, FILTRO2N!o.Conteo_Nivel_1 ,1)\
[J12] \=OFFSET( FILTRO2N!o.Elementos_Nivel_2 ,0,0, FILTRO2N!o.Conteo_Nivel_2 ,1)\
[J19] \DATO\
[J20] \a\
[J21] \b\
[J22] \e\
[J23] \x\
[K5] \Celda inicial del listado.\
[K6] \Número de elementos en el listado.\
[K7] \Celda inicial del listado.\
[K8] \Número de elementos en el listado.\

Nombres:
 [FILTRO2N!_DESTINO_NIVEL_1_VBA] =FILTRO2N!$D$19
 [FILTRO2N!_DESTINO_NIVEL_2_VBA] =FILTRO2N!$H$19
 [Captura!_FilterDatabase] =S!$A$3:$D$9
 [FILTRO2N!_FilterDatabase] =FILTRO2N!$I$19:$I$23
 [N!_FilterDatabase] =N!$A$3:$C$13
 [S!_FilterDatabase] =S!$A$3:$D$9
 [CATALOGO_N] =N!$A$3:$C$13
 [CATALOGO_S] =S!$A$3:$D$9
 [FILTRO2N!Extract] =FILTRO2N!$F$19
 [FILTRO2N!FILTRO_NIVEL_2] =FILTRO2N!$H$16:$H$17
 [FUENTE_AUTOS] =OFFSET(FILTRO2N!o.Elementos_Nivel_2,0,0,FILTRO2N!o.Conteo_Nivel_2,1)
 [FUENTE_MARCAS] =OFFSET(FILTRO2N!o.Elementos_Nivel_1,0,0,FILTRO2N!o.Conteo_Nivel_1,1)
 [FILTRO2N!i.Campo_Nivel_1] =FILTRO2N!$B$6
 [FILTRO2N!i.Campo_Nivel_2] =FILTRO2N!$B$7
 [FILTRO2N!i.Nivel_1] =FILTRO2N!$B$8
 [FILTRO2N!i.Ubicación] =FILTRO2N!$B$5
 [INPUT_CELLS] =Captura!$B$3,Captura!$B$5,Captura!$B$7
 [Captura!Listado] =Captura!$D$3:$G$4
 [Listado.Campo_Auto] =Captura!$G$1
 [Listado.Campo_Marca] =Captura!$F$1
 [Captura!Listado.Catálogo] =Captura!$D$1
 [Listado.Ubicación] =Captura!$E$1
 [FILTRO2N!o.Conteo_Nivel_1] =FILTRO2N!$D$17
 [FILTRO2N!o.Conteo_Nivel_2] =FILTRO2N!$F$17
 [FILTRO2N!o.Elementos_Nivel_1] =FILTRO2N!$D$20
 [FILTRO2N!o.Elementos_Nivel_2] =FILTRO2N!$F$20
 [SELECCION_AUTO] =Captura!$B$7
 [SELECCION_MARCA] =Captura!$B$5
 [SELECCION_TIPO] =Captura!$B$3

Nombre del proyecto VB: [VBAProject]

Módulos VBA:
 [ThisWorkbook] Tipo: 100
 [Sheet1] Tipo: 100
 [Module2] Tipo: 1
 [Filtro2N] Tipo: 100
 [Sheet3] Tipo: 100
 [Sheet4] Tipo: 100
 [EventHandlers] Tipo: 1
 [Filtro2N_Support] Tipo: 1

Codigo:
[ThisWorkbook] 0 líneas de código.
///--- BEGINNING OF MODULE ---
\\\--- END OF MODULE ---

[Sheet1] 4 líneas de código.
///--- BEGINNING OF MODULE ---
Private Sub Worksheet_Change(ByVal Target As Range)
    Captura_Change Target
End Sub

\\\--- END OF MODULE ---

[Module2] 22 líneas de código.
///--- BEGINNING OF MODULE ---
Option Explicit

'Si la selección de la celda no es válida, seleccionar la primera disponible.
Sub ValidarComboDV(AValidar As Range)
    
    Debug.Print "Validando " & AValidar.Name.Name & " [" & AValidar.Value & "]"
    
    If Not AValidar.Validation.Value Then
        
        On Error Resume Next 'Si no hay un rango válido, ocurre un error y el objeto 'Is Nothing'
        Dim rgOpcionesVálidas As Range: Set rgOpcionesVálidas = Range(AValidar.Validation.Formula1)
        On Error GoTo 0
        
        Dim NewValue: NewValue = ""
        If Not rgOpcionesVálidas Is Nothing Then _
            NewValue = rgOpcionesVálidas.Cells(1)
        Debug.Print "...No Válido. Asignado [" & NewValue & "]"
        AValidar.Value = NewValue
    Else
        Debug.Print "...Válido"
    End If
End Sub
\\\--- END OF MODULE ---

[Filtro2N] 56 líneas de código.
///--- BEGINNING OF MODULE ---
Option Explicit

Public Sub Actualizar_Nivel_1()
    ExtraerÚnicosPorColumna [i.Ubicación], _
                            [i.Campo_Nivel_1], _
                            Me.Name & "!_Destino_Nivel_1_VBA"
                            
    OrdenarFilasPorNombreDeColumna [_Destino_Nivel_1_VBA], [i.Campo_Nivel_1]
End Sub

Public Sub Actualizar_Nivel_2()
    'Parte 1
    ExtraerPorCriteria [i.Ubicación], _
                       [Filtro_Nivel_2], _
                       [_Destino_Nivel_2_VBA]
    
    'Parte 2
    ExtraerÚnicosPorColumna Me.Name & "!" & "_Destino_Nivel_2_VBA", _
                            [i.Campo_Nivel_2], _
                            Me.Name & "!" & [_Destino_Nivel_2_VBA].Offset(0, -2).Address()
    
    OrdenarFilasPorNombreDeColumna [_Destino_Nivel_2_VBA].Offset(0, -2), [i.Campo_Nivel_2]
End Sub

Sub OrdenarFilasPorNombreDeColumna(rgAOrdenar As Range, NomColumna As String)
    Set rgAOrdenar = rgAOrdenar.CurrentRegion
    'Determinar la columna de ordenamiento
    Dim rgHeader: Set rgHeader = rgAOrdenar.Rows(1).Find(NomColumna)
        
    If rgHeader Is Nothing Then Exit Sub 'No existe la columna? Nothing to do.
    
    'Determinar el Rango (Columna sin encabezado)
    Dim rgKey As Range
    Set rgKey = Intersect(rgHeader.EntireColumn, _
                          rgAOrdenar, _
                          rgAOrdenar.Offset(1, 0))
    
    If rgKey Is Nothing Then Exit Sub 'No hay filas?
    
    With rgAOrdenar.Parent.Sort
        .SortFields.Clear
        
        .SortFields.Add Key:=rgKey, _
                        SortOn:=xlSortOnValues, _
                        Order:=xlAscending, _
                        DataOption:=xlSortNormal
                             
        .SetRange rgAOrdenar
        .Header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
End Sub

\\\--- END OF MODULE ---

[Sheet3] 0 líneas de código.
///--- BEGINNING OF MODULE ---
\\\--- END OF MODULE ---

[Sheet4] 0 líneas de código.
///--- BEGINNING OF MODULE ---
\\\--- END OF MODULE ---

[EventHandlers] 32 líneas de código.
///--- BEGINNING OF MODULE ---
Sub Captura_Change(ByVal Target As Range)
On Error GoTo ErrHan
    If Application.Intersect(Target, [INPUT_CELLS]) Is Nothing Then Exit Sub
    
    Debug.Print "Manejando cambio en " & Target.Name.Name & " a [" & Target.Value & "]"
    
    ValidarComboDV [SELECCION_TIPO]
        
    Call Actualizar_Marcas
    
    Call Actualizar_Autos
    
ErrHan:
    If Err.Number <> 0 Then _
        Debug.Print Err.Number & " - " & Err.Description
End Sub

Sub Actualizar_Marcas()
    Debug.Print "Actualizando Marcas..."
    
    Call Filtro2N.Actualizar_Nivel_1
    
    ValidarComboDV [SELECCION_MARCA]
End Sub

Sub Actualizar_Autos()
    Debug.Print "Actualizando Autos..."
    
    Call Filtro2N.Actualizar_Nivel_2
    
    ValidarComboDV [SELECCION_AUTO]
End Sub
\\\--- END OF MODULE ---

[Filtro2N_Support] 32 líneas de código.
///--- BEGINNING OF MODULE ---
Option Explicit

Sub ExtraerÚnicosPorColumna(NomRangoNombrado As String, NomColumna As String, NomDestino As String)
    'Ajuste por no poder recibir objeto Range desde un Módulo de Objeto:
    Dim RgDestino As Range: Set RgDestino = Range(NomDestino)
    
    'Limpiamos resultados previos
    RgDestino.CurrentRegion.ClearContents
    
    'Determinamos la columna a extraer los valores únicos
    Dim rgHeader: Set rgHeader = Range(NomRangoNombrado).CurrentRegion.Rows(1).Find(NomColumna)
    
    Intersect(rgHeader.CurrentRegion, _
              rgHeader.EntireColumn).AdvancedFilter Action:=xlFilterCopy, _
                                                    CopyToRange:=RgDestino, _
                                                    Unique:=True, _
                                                    criteriaRange:=""
End Sub

Sub ExtraerPorCriteria(NomRangoNombrado As String, RgCriteria As Range, RgDestino As Range)
    RgDestino.CurrentRegion.ClearContents
    
    Range(NomRangoNombrado).AdvancedFilter Action:=xlFilterCopy, _
                                           criteriaRange:=RgCriteria, _
                                           CopyToRange:=RgDestino, _
                                           Unique:=True
End Sub





\\\--- END OF MODULE ---


** Fin del proceso de exportación. Proceso realizado en 0.00 minutos. **
ExportToTxt [ExportToTxt.xls] v3.0.0-SNAPSHOT (Standalone)
