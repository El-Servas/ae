Representación Textual del archivo de Excel: "Filtros Catálogo.xlsm"
Fecha y hora de generación: 29/07/2016 06:32:51 p.m.

Resumen
=======
 * Hojas: 1
 * Nombres Definidos: 11
 * Módulos de Visual Basic: 4
 * Líneas de código VB: 56

Detalle
=======

Hojas:
 [Catálogo]

Contenido:
[Catálogo]
Bloques: 10

@ A1 [1x1]
> Captura

@ A3 [1x1]
> MARCA

@ A5 [1x1]
> AUTO

@ A8 [1x1]
> Catálogos

@ E8 [1x1]
> Zona de Búsquedas

@ A10 [10x3]
(HEADER_MARCA) > MARCA
> Honda
> Honda
> Nissan
> Nissan
> Honda
> Toyota
> Baic
> Honda
> Honda
> AUTO
> Accord
> Civic
> Sentra
> Ventra
> Mamalón
> TuHoyota
> Mameid
> Fit
> Civic
> DATO
> a
> b
> c
> d
> e
> g
> --
> x
> b

@ E10 [1x1]
> Marcas

@ G10 [1x1]
> Autos

@ E12 [2x1]
> Conteo
(CONTEO_MARCAS) > =COUNTA(E16:E1048576)

@ G12 [2x2]
> Marca
> =SELECCION_MARCA
> Conteo
(CONTEO_AUTOS) > =COUNTA(G16:G1048576)


Nombres:
 [Catálogo!_FilterDatabase] =Catálogo!$A$10:$C$1048576
 [CATALOGO] =Catálogo!$A$10:$C$1048576
 [CONDICION_MARCA] =Catálogo!$G$12:$G$13
 [CONTEO_AUTOS] =Catálogo!$H$13
 [CONTEO_MARCAS] =Catálogo!$E$13
 [Catálogo!Criteria] =Catálogo!$G$12:$G$13
 [DESTINO_AUTOS] =Catálogo!$G$15
 [DESTINO_MARCAS] =Catálogo!$E$15
 [Catálogo!Extract] =Catálogo!$G$15:$I$15
 [HEADER_MARCA] =Catálogo!$A$10
 [SELECCION_MARCA] =Catálogo!$B$3

Nombre del proyecto VB: [VBAProject]

Módulos VBA:
 [ThisWorkbook] Tipo: 100
 [Sheet1] Tipo: 100
 [Module1] Tipo: 1
 [Module2] Tipo: 1

Codigo:
[ThisWorkbook] 0 líneas de código.
///--- BEGINNING OF MODULE ---
\\\--- END OF MODULE ---

[Sheet1] 0 líneas de código.
///--- BEGINNING OF MODULE ---
\\\--- END OF MODULE ---

[Module1] 20 líneas de código.
///--- BEGINNING OF MODULE ---
'Lista única de Marcas
Sub Actualizar_Marcas()
    'Limpiamos resultados previos
    [Destino_Marcas].CurrentRegion.ClearContents

    'Se especifica a mano la columna de la marca (Con un Rango Nombrado)
    Intersect([HEADER_MARCA].CurrentRegion, [HEADER_MARCA].EntireColumn).AdvancedFilter Action:=xlFilterCopy, CopyToRange:=[Destino_Marcas], Unique:=True, criteriaRange:=""
    
    OrdenarFilasPorNombreDeColumna [Destino_Marcas].CurrentRegion, "marca"
End Sub

'Lista filtrada por una Marca particular
Sub Actualizar_Autos()
    'Limpiamos resultados previos
    [Destino_Autos].CurrentRegion.ClearContents
    
    [CATALOGO].AdvancedFilter Action:=xlFilterCopy, criteriaRange:=[CONDICION_MARCA], CopyToRange:=[Destino_Autos], Unique:=True
    
    OrdenarFilasPorNombreDeColumna [Destino_Autos].CurrentRegion, "auto"
End Sub
\\\--- END OF MODULE ---

[Module2] 36 líneas de código.
///--- BEGINNING OF MODULE ---
Option Explicit

Sub OrdenarFilasPorNombreDeColumna(rgAOrdenar As Range, NomColumna As String)
    'Determinar la columna de ordenamiento
    Dim rgHeader: Set rgHeader = rgAOrdenar.Rows(1).Find(NomColumna)
        
    If rgHeader Is Nothing Then Exit Sub 'No existe la columna? Nothing to do.
    
    'Determinar el Rango (Columna sin encabezado)
    Dim rgKey As Range
    Set rgKey = Intersect(rgHeader.EntireColumn, _
                          rgAOrdenar, _
                          rgAOrdenar.Offset(1, 0))
    
    With rgAOrdenar.Parent.Sort
        .SortFields.Clear
        
        .SortFields.Add Key:=rgKey, _
                        SortOn:=xlSortOnValues, _
                        Order:=xlAscending, _
                        DataOption:=xlSortNormal
                             
        .SetRange rgAOrdenar
        .Header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    
End Sub

Sub Rig()
    OrdenarFilasPorNombreDeColumna [Destino_Autos].CurrentRegion, "auto"
End Sub

\\\--- END OF MODULE ---


** Fin del proceso de exportación. Proceso realizado en 0.00 minutos. **
ExportToTxt [ExportToTxt.xls] v3.0.0-SNAPSHOT (Standalone)
